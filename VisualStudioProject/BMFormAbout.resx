<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhTgA8AIEAAMDAwK2trUJCQgAAACH/C05FVFNDQVBFMi4wAwEBAAAh+QQBAAAAACwAAAAATgA8
        AAAI/wABCBxIsKDBgwgTChTAcKGAAAIHDBCgsKLFixgLShwQIMDGjhIhZszYkaFIACdHGhSwsWVLlRcD
        sNzIsCVFmAM76ty5E6dCjxx3Pqw5EeZMiRRBfkSa0ufAkEdluhwAE6jEgUcnRi0o86bJpgY9Sp3o8aFS
        qiqtFs2qdWJIgVZFWr2JkGXcs27RJnxoEClbskDvvsRKMyHZlmrd0kXIceVOl2M5Kj66WK3hhzT/FlX4
        Fu5Yoog/Ys7bmODgg3aXTi2dMLHWx5CXAh29GADTvZL9RkYa0yzc1UxlawUwk+BMsBolj05cG6Pr4FCV
        J+WNkvpPwAxHI65qliflsna9Xv/danG2TtAfcZZkOzSkVrraWV9vL/n5a548FwL/Klo5YevlhRRYW8AV
        eNhU3X3HUk0QqTUURsfVRJR9BaIH2G5mqYbXZxctdZyABroUn1nslaSadjfNVdFsC7p3YIgugiiiif2R
        Vll6rSGlY27xGQjaboDNSBmAv12FW26B4dfUXGftptNUG26E0GyGudgVh1MGxaNaeDGV1XJV6sWVX1eB
        J1VzOUEXGZD0FXbckVnyaNtfcR44FoZdblZcjmIaZyVx2BlZEFuBffjRcye9WZegySHZImSDQhmddkCS
        RRCVjDGaJoFPQbkplAuWZZ5NJjaK3ExoDqjnanIZqGqhAlL/Fmln//X5n6IFVjqjewyGN9VKNqGHnG2Q
        EkecZjC2l1p2moGFrHyX/moahUIi9lmMCIaVLZ+FGWehp4Tx5ZlU1DK7GpqzdpsmtUs2yB5Fz+aKUbFj
        6pqqj9WF+BVJpx0kaoNSjgmjlvv5FFdFR0UELaADw1swTuQd2diwA3dWoE/91jmswg3rt5p66nK7MbEV
        Z8hqVThWFDKw26KE4bkby8SyrYtq2lfLlz7po7lEkkwzagFLLKJdM1e82afoakurvyEybfTRn44cbWc6
        FU1vuskCbTNnvMk69Yzcwojcygj7RWJDpkl73cBgqZjRgtmRlhKdATJVaXMH81tWUKj6jemSUzh7/HOO
        DKrNcMaXmlQz2WRbNNS3iRoeLbPOSp73SBICB7DkvxHaaMaXv91VhcAdRNqM9s0d9EgyUfvw5GZ/Cy7H
        SV/X+uH6rjQkTSGehCnE2XHce1izPc1aWU55XCSCiBcZ78kOJU+Y350p6tixupLVN1bSG5dS1XCJi/Cn
        3QbW/fkrctWTZwYFBAA7
</value>
  </data>
</root>